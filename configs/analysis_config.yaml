# seed for the random number generators, to make things reproducible
seed: 42

# define th number of cross validations to perform
n_cross_validations: 5

energy:
    #the classifier to use
    regressor : |
      ensemble.RandomForestRegressor(
        n_estimators=30,
        max_features='sqrt',
        n_jobs=-1,
        max_depth=12,
      )


    # randomly sample the data if you dont want to use the whole set
    # n_signal: 500

    # define the name of the regression target
    target_column: corsika_event_header_total_energy


    # Define the name of the variable you want estimate by regression. The default is 'energy'.
    # It will be written as <class_name>_prediction into the file when applying the model.
    class_name: gamma_energy


    features:
      - size
      - n_pixel
      - delta
    #  - clusters
    # - cog_x
    # - cog_y
      - kurtosis_long
      - kurtosis_trans
      - length
      - skewness_long
      - skewness_trans
      - width
    #  - cluster_size_ratio

    # Generate some features using pd.DataFrame.eval
    # List all keys that have to be read from the input files
    # in needed keys.
    # features must be a mapping of feature name -> expression
    feature_generation:
     needed_columns:
       - width
       - length
     features:
      area: width * length * @pi

separator:
    #the classifier to use
    classifier : |
      ensemble.RandomForestClassifier(
          n_estimators=200,
          max_features='sqrt',
          n_jobs=-1,
          max_depth=15,
          criterion='entropy',
      )


    # randomly sample the data if you dont want to use the whole set
    # n_background: 100000
    n_signal: 100000

    # Define the name of the category you want to find. The default is 'gamma'.
    # It will be written as <class_name>_prediction into the file when applying the model.
    class_name: gamma

    # Define the name of the column that contains the name of the telescope in case you're working
    # with mulitple telescopes and telescope types
    #telescope_type_key: telescope:name


    features:
      - clusters
      - kurtosis_long
      - kurtosis_trans
      - skewness_long
      - skewness_trans
      - length
      - size
      - width
      - cluster_size_ratio
      - n_pixel

disp:
    disp_regressor : |
      ensemble.RandomForestRegressor(
          n_estimators=100,
          max_features='sqrt',
          n_jobs=-1,
          max_depth=15
      )

    sign_classifier: |
      ensemble.RandomForestClassifier(
          n_estimators=100,
          max_features='sqrt',
          n_jobs=-1,
          max_depth=15,
      )



    # columns containing coordinates of the source and of the pointing
    source_azimuth_column: source_position_az
    source_zenith_column: source_position_zd
    pointing_azimuth_column: pointing_position_az
    pointing_zenith_column: pointing_position_zd


    # randomly sample the data if you dont want to use the whole set
    n_signal : 200000

    features:
    # - clusters
      - length
    #  - size
      - width
      - skewness_long
      - skewness_trans
      - kurtosis_long
      - kurtosis_trans
      - cog_x
      - cog_y
      - delta
